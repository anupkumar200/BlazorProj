@inject UserClients Clients
@inject NavigationManager _navigationManager
@rendermode InteractiveServer


<div class="modal fade" data-backdrop="static" data-keyboard="false" id="@GetModalId(User)" tabindex="-1" role="dialog">
    <div class="modal-dialog  modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">@title</h5>
                <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    Cancel
                </button>
                <button type="button" class="btn btn-danger" data-bs-dismiss="modal" @onclick="@Confirm">
                    Delete
                </button>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public Users? User { get; set; }

    private string? title { get; set; }

    protected override void OnParametersSet()
    {
        title = $"Delete {User?.FirstName} ?";
    }

    public static string GetModalId(Users? user)
    {
        ArgumentNullException.ThrowIfNull(user);
        return $"deleteModal-{user.Id}";
    }

    private void Confirm()
    {
        Clients.DeleteUser(User!.Id);
        _navigationManager.Refresh();
    }
}
